
<% @original_files.each do |slide| %> 
    <% @counter += 1 %>

    <% if @counter === @active_slide %>
      
      <#% if Rails.env.development? || Rails.env.test? %>
      <%#  resets the @full_dir so "public/" isn't added twice since image_tag auto adds it. 
            Probably should have used just plain old HTML but at least I learned a bit about the asset_path
            I guess %>
        <% @full_dir = "#{@assets_dir}#{@image_dir}" %>
      <#% end %>

      <%# tbh it would have taken less time to just use normal html instead of the image_tag helpers.... %>

      <%= content_tag :div, class: "#{@tab_value} #{@active_slide_class}" do %>
              <%= render 'layouts/loadAnim' %> 
        <%= image_tag("", id: "#{@full_dir}/#{slide}", data: {sizes: @sizes_per_file[slide], route: "#{asset_path @full_dir}" , file: "#{slide}" } ) %>
        
        <%# aÃ±adir locals a loadAnim para poder ocultar solo una (la relacionada a la slide q corresponda)%>

      <% end %>

    <% else %>
    
    <%= content_tag :div, class: "#{@tab_value}" do %>
      <%#= image_tag("#{@image_dir}/#{slide}-placeholder"), id="#{slide}"-%>
         <%= render 'layouts/loadAnim' %>
      <%= image_tag("", id: "#{@full_dir}/#{slide}", data: {sizes: @sizes_per_file[slide], route: "#{asset_path @full_dir}" , file: "#{slide}" } ) %>
 

    <%# id de imagen en el div contenedor de la imagen y luego reemplazar el innerhtml del div con el div de la imagen -%>
    <% end %>
  <% end %>

<% end %>

