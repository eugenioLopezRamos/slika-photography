continue
@url
continue
@tab
continue
@tab
continue
@tab
continue
redirect_to "/kasdasf"
redirect_to kasdasf
redirect_to @tab
@tab
Rails.application.routes.url_helpers.defined?("/home")
Rails.application.routes
Rails.application
Rails.application.routes.url_helpers
Rails.application.routes.url_helpers.method_defined?("/home")
Rails.application.routes.url_helpers.method_defined?(/home)
Rails.application.routes.url_helpers.method_defined?(root_path)
Rails.application.routes.url_helpers.method_defined?(blog_url)
Rails.application.routes.url_helpers.method_defined?(blog_path)
Rails.application.routes
Rails.application.routes.url_helpers.method_defined?(@tab)
continue
@tab
continue
Rails.application.routes.recognize_path(request.env['PATH_INFO'].downcase, :controller => StaticController, :action => show, :method => :get)
request.env['PATH_INFO']
Rails.application.routes.recognize_path(request.env['PATH_INFO'].downcase, :controller => StaticController, :action => show, :method => :get)
Rails.application.routes.recognize_oath(request.env['PATH_INFO']Rails.application.routes.recognize_path(req
Rails.application.routes.recognize_oath(request.env['PATH_INFO']Rails.application.routes.recognize_path(request.env['PATH_INFO'].downcase, :controller => StaticController, :action => show, :method => :get)
continue
Rails.application.routes.recognize_path(request.env['PATH_INFO'], :method => :get)
Rails.application.routes.recognize_path(request_env['PATH_INFO'], :method => :get)
Rails.application.routes.recognize_path(request_env['PATH_INFO], :method => :get)
request.env['PATH_INFO'].downcase
request.env['PATH_INFO']
asdasd
continue
env['PATH_INFO']
continue
env['PATH_INFO']
continue
env['PATH_INFO']
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
var instance
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
var instance
continue
var instance
continue
var instance
continue
var instance
continue
var instance
var
var const
var
var local
var locals
params
continue
params
continue
params
var all
var args
continue
var args
var
var all
var local
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
var all
continue
var all
var 
data
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
@parameters
continue
active_slide
continue
var
parameters
continue
@parameters
continue
active_slide
continue
active_slide
params[:id]
continue
params[:id]
continue
params[:id]
continue
params[:id]
params[;id]
params[_id]
continue
var all
var
continue
local
params[:id]
active_slide
continue
params
continue
params[:id]
current_user.id
continue
current_user.id === Post.find(params[:id]).user_id
Post.find(params[:id]).user_id
current_user
current_user.id
continue
@current_user
Post.find(params[:id]).user.id
Post.find(params[:id]).content
continue
Post.find(params[:id]).content
Post.find(params[:id]).user.id
@post
@adminpost
var all
continue
var all
continue
var all
continue
@current_user
continue
var all
var
help
@admin
@notadmin
@user
current_user.id
Post.find(params[:id]).user_id
continue
params[:tab]
tab
:tab
continue
var local
var locals
continue
var local
var locals
locals
continue
var local
var locals
continue
params
var params
var local
var
continue
params
var params
var local
var
continue
locals[:tab]
local
locals
params
continue
params
continue
params
continue
params[:tab]
params
continue
params
continue
params
continue
params
continue
locals
locals:
params[:tab]
continue
params[:tab]
continue
@name
name
