quit!
id
quit!
continue
assert_select "[data-sizes]"
[data-sizes]
continue
correct_sizes
continue
@sizes_per_file[filename]
correct_sizes
continue
filename
continue
str = img_ids.include? id ? str = id : str = ""
img_ids.include? id ? id : ""
filename
quit!
continue
@sizes_per_file[filename]
@sizes_per_file
filename
continue
id
continue
id
continue
id
continue
id
continue
id
continue
id
continue
id
continue
id
continue
img_ids
continue
images.select {|filename| filename.include? "original-"}
images
continue
@image_dir
@assets_dir
@public_folder
continue
images
continue
images
continue
@tabs
continue
@active_slide
@active_Slide
@counter
counter
continue
@active_slide === @counter
@active_slide
@counter
continue
image
continue
File
File.open(image, 'rb')
image
continue
image_file
image
continue
optimized_array
coptimized_array
continue
optimized_array
continue
applicable_widths
@to_upload
continue
@to_upload
continue
MimeMagic.by_magic(image)
continue
params[:image]
continue
MimeMagic.by_magic("#{params[:image][0]}")
MimeMagic.by_path(params[:image][0].path)
MimeMagic.by_path(params[:image][0].tempfile.path)
MimeMagic.by_magic(params[:image][0].tempfile)
params[:image][0].tempfile
params[:image][0]
params[:image].to_s
params[:image].tempfile
params[:image]
MimeMagic.by_magic(params[image])
MimeMagic.by_magic(params[:image])
MimeMagic.by_magic(params[:image][0])
MimeMagic.by_magic(params[:image][0].path)
MimeMagic.by_magic(params[:image][0].tempfile)
MimeMagic.by_magic(params[:image][0])
MimeMagic.by_path(params[:image][0])
MimeMagic.by_magic(params[:image][0])
params[:image][0].path
params[:image][0]
params[:image]
params[:image].path
params[:image]
continue
MimeMagic.by_magic(params[:image][0].path)
MimeMagic.by_magic(params[:image][0])
MimeMagic.by_magic(params[:image].path)
MimeMagic.by_magic(params[:image])
MimeMagic.by_magic(params[:image][0])
params[:image][0]
params[:image]
continue
MimeMagic.by_magic(image).image?
MimeMagic.by_magic(image)
MimeMagic.by_path("#{image}")
MimeMagic.by_path(image)
image.path
MimeMagic.by_path(image.tempfile.path)
MimeMagic.by_path("#{image.tempfile.path}")
MimeMagic.by_path("#{image.path}")
MimeMagic.by_path(image.path)
image.path
image
continue
MimeMagic.by_path("#{params[:image][0].tempfile.path}")
MimeMagic.by_path("#{params[:image][0].path}")
MimeMagic.by_path(params[:image][0].path)
MimeMagic.by_patj(params[:image][0].path)
params[:image][0].path
MimeMagic.by_path(params[:image][0].path).image?
params[:image][0]
params[:image]
continue
params[:image][0].path
params[:image][0]
params[:image]
continue
params[:image][0].tempfile
params[:image][0]
params[:image]
continue
params[:image]
params[:image][0]
params[:image][:image]
params[:image]
continue
ii
mgei
img
mge
continue
params[:image][:image][0].tempfile
params[:image][:image].tempfile
params[:image][:image]
params[:image].path
params[:image]
continue
params[:image]
image
continue
MimeMagic.by_path(image.path).image?
image
continue
image
continue
image
continue
image.tempfile
image
continue
image
params[:image][1]
params[:image][0]
params[:image].tempfile
params[:image]
continue
params[:image][0]
params[:image]
continue
selected_files
quit!
qu
quit!
selected_files
continue
all_children.contents
all_children
adsasdasd
all_children
all_childrten
continue
files_array
quit!
files_array
fiels_array
files_array
raiasdasdasdsa
continue
original_files
continue
full_dir
files_in_folder
full_dir
continue
files_in_folder
continue
files_in_folder
continue
files_in_folder
continue
files_in_folder
continue
files_in_folder
continue
files_in_folder
continue
files_in_folder
continue
files_in_folder
continue
files_in_folder
continue
full_dir
continue
full_dir
continue
Dir.glob(asset_path(""))
Dir.glob(asset_path)
Dir.glob(asset_path "*")
Dir.glob(asset_path "/*")
asset_path ""
asset_path
continue
size_breakpoints[index]
size_breakpoints
img_width
img_width<size_breakpoints[-2] && size_breakpoints[index + 2].nil?
continue
img_width<size_breakpoints[-2] && size_breakpoints[index + 2].nil?
img_width<size_breakpoints[-2] && size_breakpoints[index + 1].nil?
size_breakpoints[index + 1]
continue
size_breakpoints[index + 1]
continue
size_breakpoints[index + 1]
continue
size_breakpoints[index + 1]
size_breakpoints[-2]
img_width
byebug
sadasds787
