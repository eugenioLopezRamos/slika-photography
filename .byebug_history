continue
file.original_filename
zip_entry.name
continue
zip_entry
continue
params
continue
params
continue
ActiveSupport::JSON.encode("authenticity-token" => mock_auth_token, "files" => files_array)
continue
params
continue
params[:files]
params
continue
params[:'files']
params[:'authenticity-token']
params[:authenticity-token]
params
continue
params
continue
sel_file
continue
file.original_filename
zip_entry.name
continue
zip_entry.name
file.original_filename
continue
file.original_filename
zip_entry.name
continue
uploaded_images_array.methods
uploaded_images_array.index
uploaded_images_array.inspect
file
continue
upload_images_array
entry.name
entry
continue
file.original_filename
entry.name
continue
entry.name
file.original_filename
continue
file.original_filename
entry.name
@current_entry
zip_file.current_entry
zip_file
uploaded_images_array
continue
uploaded_images_array
continue
file.original_filename
file.original_filename ===  entry.name
continue
file.original_filename
entry.name
entry
Zip::InputStream.open(entry).rewind
entry.rewind
entry
entry.name
file.original_filename
entry.name
file.original_filename ===  entry.name
continue
entry.name
file.original_filename
file
continue
file.class
file.size
file
uploaded_images_array[0]
uploaded_images_array
file
file.inspect
file
file.original_filename
entry.name
continue
Zip::InputStream.open(zip_file_location)
continue
zip_entry.name
file.original_filename
continue
zip_entry
continue
zip_file.read(zip_entry)
zip_file.read
zip_file
zip_file.rewind
zip_file.open
File.open(zip_file)
zip_file
continue
file.original_filename
continue
File.open(zip_file_location)
File.open(zip_file_location).rewind
zip_file::get_input_stream(zip_file).rewind
zip_file::get_input_stream(zip_entry).rewind
zip_file::get_input_stream(zip_entry)
zip_file::get_input_stream.rewind
zip_file::InputStream.rewind
zip_file.rewind
Zip::File(zip_file_location).rewind
Zip::File.rewind(zip_file_location)
Zip::File.open(zip_file_location).rewind
Zip::File.open(zip_file_location)
Zip::InputStream.open(zip_file_location).rewind
Zip::InputStream.open(zip_file_location).read
Zip::InputStream.open(zip_file_location)
Zip::InputStream.open(zip_file_location).rewind
zip_entry.rewind
zip_entry::InputStream.rewind
zip_file::InputStream.rewind
zip_file.rewind
zip_file
continue
file.original_filename
zip_entry.name
continue
zip_entry.name
file.original_filename
continue
file.original_filename
file.original_name
zip_entry.name
zip_entry
continue
uploaded_images_array.length
uploaded_images_array
files_array
file.original_filename
zip_entry.name
file.original_filename
file.inspect
file.original_name
file_original_name
zip_entry.name
zip_entry
continue
zip_entry.filepath
continue
zip_entry.filepath
zip_entry
continue
zip_entry.filepath
zip_entry.name
zip_entry
continue
zip_file
zip_entry
continue
zip_entry
continue
zip_entry
zip_file
continue
zip_entry
continue
zip_file
zip_entry[0]
zip_entry
continue
zip_file_contents
uploaded_images_array[0].original_filename
uploaded_images_array
@zip_file_location
zip_file_contents
continue
zip_file_contents
zip_file_contents[]
continue
file_routes_array.length
continue
file_routes_array.length
continue
file_routes_array.length
continue
file_routes_array.length
file_routes_array
continue
zip_file_contents
files_array
@zip_file_location
continue
files_array
zip_file_contents
@zip_file_location
continue
files_array.slice(0..-2)
files_array
zip_file_contents
@zip_file_location
continue
files_array.slice(0..-2)
zip_file_contents
@zip_file_location
continue
zip_file_contents
files_array
files_array.slice(0..-2)
files_array
continue
(original_directory_file_count + files_array.length + 2)
Dir["#{Rails.root}/tmp/*"].length
continue
Dir["#{Rails.root}/tmp/*"].length
(original_directory_file_count + files_array.length + 2)
(original_directory_file_count + files_array.length +2)
original_directory_file_count + files_array.length +2
original_directory_file_count + files_array.length
Dir["#{Rails.root}/tmp/*"].length
original_directory_file_count
continue
File.unlink(file)
file.inspect
file.close
file
continue
zip_entry.size
file.size
zip_entry
file
continue
zip_entry.compressed_size
zip_entry.size
zip_entry.inspect
zip_entry.methods
q
continue
File.basename(path)
File.basename(path)[2]
File.basename(path)[1]
File.basename(path)[0]
File.basename(path)
continue
Dir[Rails.root/tmp].entries
Dir[Rails.root/tmp].contents
Dir[path].contents
Dir[path].entries
Dir[path].entrie
Dir[path]
Dir(path)
continue
path
end
