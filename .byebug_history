continue
size_breakpoints[index]
size_breakpoints
img_width
img_width<size_breakpoints[-2] && size_breakpoints[index + 2].nil?
continue
img_width<size_breakpoints[-2] && size_breakpoints[index + 2].nil?
img_width<size_breakpoints[-2] && size_breakpoints[index + 1].nil?
size_breakpoints[index + 1]
continue
size_breakpoints[index + 1]
continue
size_breakpoints[index + 1]
continue
size_breakpoints[index + 1]
size_breakpoints[-2]
img_width
byebug
sadasds787
asdkadsk
quit!
continue
size_breakpoints[index]
size_breakpoints[index + 1]
size_breakpoints[-2]
size_breakpoints[-1]
img_width
continue
applicable_widths
quit!
applicable_widths
continue
files_in_folder
continue
files_in_folder
continue
files_in_folder
continue
files_in_folder
;5~
continue
files_in_folder
continue
files_in_folder[0] ="#{full_dir}/#{files_in_folder[0]}"
files_in_folder.each { |file| file = "#{full_dir}#{file}" }
continue
files_in_folder
continue
quit!
quot!
quit!
files_in_folder
quit!
continue
to_add.gsub("-#{base_file}", "")
to_add.gsub("-{base_file}", "")
base_file
to_add
quit!
continue
to_add.gsub("-#{base_file}", "")
to_add
base_file
quiot
continue
reset
base_file
to_add
to_addaddasdsad
quit!
continue
version
to_add
"100-1.jpg".gsub(base_file)
versions
continue
base_file
to_add
versions
quit!
quit
:q
continue
key
continue
@to_upload
continue
@to_upload
continue
File.basename(@to_upload[0])
@to_upload[0].inspect
@to_upload[0].original_filename
@to_upload[0]
@to_upload
continue
@to_upload[1].pathname
@to_upload[1].path
@to_upload[0].path
@to_upload[0].original_filename
@to_upload.original_filename
@to_upload
continue
@to_upload
continue
@to_upload
continue
@to_upload
continue
@to_upload
continue
@to_upload
continue
1920/1500
15000/19200
(1500/1920)*100
1500/1920
img_width
app_width
new_height
continue
app_width/img_width
new_height
img_height
continue
@to_upload
continue
image.tempfile
image.path
image
params
continue
@images_to_optimize[0].tempfile
@images_to_optimize.image.tempfile
@images_to_optimize.image
@images_to_optimize
continue
@to_upload
continue
@to_upload
continue
@to_upload
continue
applicable_widths
continue
applicable_widths
continue
width.next
img_width > width.next
!width.next.nil? && width > img_width && img_width > width.next
!width.next.nil? && width > img_width #&& img_width > width.next
!width.next.nil? && width# > img_width && img_width > width.next
!width.next.nil? && width > img_width && img_width > width.next
continue
width
!width.next.nil? && width > img_width && img_width > width.next
applicable_widths
continue
applicable_widths
continue
!width.next.nil?
size_breakpoints[0]
img_width > width
width
continue
width
img_width > width.next
width > img_width
img_width
continue
applicable_widths
@to_upload
continue
my_var
continue
my_img.size
continue
my_img.size
my_img
image_file
continue
image_file
continue
image_file.rewind
image_file
continue
image_file
image_file.rewind
image_file
continue
nuimg.size
nuimg
continue
mogrify.path
mogrify.target
mogrify
image.size
image.path
image
continue
image.tempfile.path
image.path
continue
image.tempfile.size
image
continue
image.size
image
continue
image.size
image-size
image
continue
image.size
continue
image.size
continue
image.size
image
continue
image.size
image
continue
image.size
continue
mi_wt
mi_ht
mi_sz
continue
params[:image][0].tempfile.size
params[:image][0].tempfile.methods
params[:image][0].tempfile.inspect
params[:image][0].tempfile
params[:image].tempfile
params[:image]
continue
params[:image]
params[:image].image
params[:image].tempfile
params[:image][tempfile]
params[:image][:tempfile]
params[:image]
params[:image].tempfile
continue
User.find(new_user_at_creation)
User.find(new_user_at_creation.id)
new_user_at_creation.authenticated?(:activation, new_user_at_creation.activation_token)
new_user_at_creation.authenticated?
continue
assigns(:current_user)
continue
assigns(:current_user)
continue
assigns(:current_user)
continue
assigns(:current_user)
continue
